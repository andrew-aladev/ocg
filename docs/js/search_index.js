var search_data = {"index":{"searchIndex":["ocg","baseerror","copyable","notimplementederror","operator","and","abstract","mix","or","options","validateerror","validation","and()","each()","finished?()","finished?()","finished?()","finished?()","finished?()","initialize_copy()","initialize_copy()","last()","last()","last()","last()","last()","length()","length()","length()","length()","length()","merge_results()","mix()","new()","new()","new()","new()","next()","next()","next()","next()","next()","or()","prepare_generator()","reset()","reset()","reset_main_generator()","reset_value_indexes()","started?()","started?()","started?()","started?()","started?()","validate_options()","authors","license","readme"],"longSearchIndex":["ocg","ocg::baseerror","ocg::copyable","ocg::notimplementederror","ocg::operator","ocg::operator::and","ocg::operator::abstract","ocg::operator::mix","ocg::operator::or","ocg::options","ocg::validateerror","ocg::validation","ocg#and()","ocg#each()","ocg::operator::and#finished?()","ocg::operator::abstract#finished?()","ocg::operator::mix#finished?()","ocg::operator::or#finished?()","ocg::options#finished?()","ocg::copyable#initialize_copy()","ocg::operator::mix#initialize_copy()","ocg::operator::and#last()","ocg::operator::abstract#last()","ocg::operator::mix#last()","ocg::operator::or#last()","ocg::options#last()","ocg::operator::and#length()","ocg::operator::abstract#length()","ocg::operator::mix#length()","ocg::operator::or#length()","ocg::options#length()","ocg::operator::abstract#merge_results()","ocg#mix()","ocg::new()","ocg::operator::abstract::new()","ocg::operator::mix::new()","ocg::options::new()","ocg::operator::and#next()","ocg::operator::abstract#next()","ocg::operator::mix#next()","ocg::operator::or#next()","ocg::options#next()","ocg#or()","ocg::prepare_generator()","ocg::operator::abstract#reset()","ocg::options#reset()","ocg::operator::mix#reset_main_generator()","ocg::options#reset_value_indexes()","ocg::operator::and#started?()","ocg::operator::abstract#started?()","ocg::operator::mix#started?()","ocg::operator::or#started?()","ocg::options#started?()","ocg::validation::validate_options()","","",""],"info":[["OCG","","OCG.html","","<p>Option combination generator. Copyright © 2019 AUTHORS, MIT License.\n<p>Option combination generator.  …\n"],["OCG::BaseError","","OCG/BaseError.html","",""],["OCG::Copyable","","OCG/Copyable.html","","<p>OCG::Copyable module.\n"],["OCG::NotImplementedError","","OCG/NotImplementedError.html","",""],["OCG::Operator","","OCG/Operator.html","",""],["OCG::Operator::AND","","OCG/Operator/AND.html","","<p>OCG::Operator::AND class.\n"],["OCG::Operator::Abstract","","OCG/Operator/Abstract.html","","<p>OCG::Operator::Abstract class.\n"],["OCG::Operator::MIX","","OCG/Operator/MIX.html","","<p>OCG::Operator::MIX class.\n"],["OCG::Operator::OR","","OCG/Operator/OR.html","","<p>OCG::Operator::OR class.\n"],["OCG::Options","","OCG/Options.html","","<p>OCG::Options class.\n"],["OCG::ValidateError","","OCG/ValidateError.html","",""],["OCG::Validation","","OCG/Validation.html","","<p>OCG::Validation module.\n"],["and","OCG","OCG.html#method-i-and","(generator_or_options = {})","<p>Adds <code>generator_or_options</code> to current option combinations generator.\n"],["each","OCG","OCG.html#method-i-each","(&_block)","<p>Processes each option combination.\n"],["finished?","OCG::Operator::AND","OCG/Operator/AND.html#method-i-finished-3F","()","<p>Is option combinations generation finished?\n"],["finished?","OCG::Operator::Abstract","OCG/Operator/Abstract.html#method-i-finished-3F","()",""],["finished?","OCG::Operator::MIX","OCG/Operator/MIX.html#method-i-finished-3F","()","<p>Is option combinations generation finished?\n"],["finished?","OCG::Operator::OR","OCG/Operator/OR.html#method-i-finished-3F","()","<p>Is option combinations generation finished?\n"],["finished?","OCG::Options","OCG/Options.html#method-i-finished-3F","()","<p>Is option combinations generation finished?\n"],["initialize_copy","OCG::Copyable","OCG/Copyable.html#method-i-initialize_copy","(source)","<p>Initializes copy of <code>source</code> object using <code>VARIABLES_TO_COPY</code> keys.\n"],["initialize_copy","OCG::Operator::MIX","OCG/Operator/MIX.html#method-i-initialize_copy","(*args)","<p>Initializes copy of current generators.\n"],["last","OCG::Operator::AND","OCG/Operator/AND.html#method-i-last","()","<p>Get last option combination result.\n"],["last","OCG::Operator::Abstract","OCG/Operator/Abstract.html#method-i-last","()",""],["last","OCG::Operator::MIX","OCG/Operator/MIX.html#method-i-last","()","<p>Get last option combination result.\n"],["last","OCG::Operator::OR","OCG/Operator/OR.html#method-i-last","()","<p>Get last option combination result.\n"],["last","OCG::Options","OCG/Options.html#method-i-last","()","<p>Get last option combination.\n"],["length","OCG::Operator::AND","OCG/Operator/AND.html#method-i-length","()","<p>Get options combination length.\n"],["length","OCG::Operator::Abstract","OCG/Operator/Abstract.html#method-i-length","()",""],["length","OCG::Operator::MIX","OCG/Operator/MIX.html#method-i-length","()","<p>Get options combination length.\n"],["length","OCG::Operator::OR","OCG/Operator/OR.html#method-i-length","()","<p>Get option combinations length.\n"],["length","OCG::Options","OCG/Options.html#method-i-length","()","<p>Get option combinations length.\n"],["merge_results","OCG::Operator::Abstract","OCG/Operator/Abstract.html#method-i-merge_results","(left, right)","<p>Merges results specifically for options.\n"],["mix","OCG","OCG.html#method-i-mix","(generator_or_options = {})","<p>Mixes <code>generator_or_options</code> with current option combinations generator.\n"],["new","OCG","OCG.html#method-c-new","(generator_or_options = {})","<p>Initializes options generator using <code>generator_or_options</code>. <code>generator_or_options</code> may be <code>generator</code> object …\n"],["new","OCG::Operator::Abstract","OCG/Operator/Abstract.html#method-c-new","(left_generator_or_options, right_generator_or_options)","<p>Initializes operator using <code>left_generator_or_options</code> and <code>right_generator_or_options</code>. Internaly object …\n"],["new","OCG::Operator::MIX","OCG/Operator/MIX.html#method-c-new","(*args)","<p>Initializes current generators.\n"],["new","OCG::Options","OCG/Options.html#method-c-new","(options)","<p>Initializes options using <code>options</code> values. <code>options</code> is a hash with values convertable to array.\n"],["next","OCG::Operator::AND","OCG/Operator/AND.html#method-i-next","()","<p>Get next option combination result.\n"],["next","OCG::Operator::Abstract","OCG/Operator/Abstract.html#method-i-next","()","<p>:nocov:\n"],["next","OCG::Operator::MIX","OCG/Operator/MIX.html#method-i-next","()","<p>Get next option combination result.\n"],["next","OCG::Operator::OR","OCG/Operator/OR.html#method-i-next","()","<p>Get next option combination result.\n"],["next","OCG::Options","OCG/Options.html#method-i-next","()","<p>Get next option combination.\n"],["or","OCG","OCG.html#method-i-or","(generator_or_options = {})","<p>Mixes <code>generator_or_options</code> with current option combinations generator.\n"],["prepare_generator","OCG","OCG.html#method-c-prepare_generator","(generator_or_options)","<p>Prepares options generator using <code>generator_or_options</code>. <code>generator_or_options</code> may be <code>generator</code> object or …\n"],["reset","OCG::Operator::Abstract","OCG/Operator/Abstract.html#method-i-reset","()","<p>Resets left and right generators specifically for options.\n"],["reset","OCG::Options","OCG/Options.html#method-i-reset","()","<p>Resets current option combinations state.\n"],["reset_main_generator","OCG::Operator::MIX","OCG/Operator/MIX.html#method-i-reset_main_generator","()","<p>Resets left or right generator based on internal state.\n"],["reset_value_indexes","OCG::Options","OCG/Options.html#method-i-reset_value_indexes","()","<p>Resets internal value indexes.\n"],["started?","OCG::Operator::AND","OCG/Operator/AND.html#method-i-started-3F","()","<p>Is option combinations generation started?\n"],["started?","OCG::Operator::Abstract","OCG/Operator/Abstract.html#method-i-started-3F","()",""],["started?","OCG::Operator::MIX","OCG/Operator/MIX.html#method-i-started-3F","()","<p>Is option combinations generation started?\n"],["started?","OCG::Operator::OR","OCG/Operator/OR.html#method-i-started-3F","()","<p>Is option combinations generation started?\n"],["started?","OCG::Options","OCG/Options.html#method-i-started-3F","()","<p>Is option combinations generation started?\n"],["validate_options","OCG::Validation","OCG/Validation.html#method-c-validate_options","(options)","<p>Raises error when <code>options</code> is not hash\n\n<pre>and option values are not convertable to array\nand option values ...</pre>\n"],["AUTHORS","","AUTHORS.html","","<p>Andrew Aladjev\n"],["LICENSE","","LICENSE.html","","<p>MIT License\n<p>Copyright © 2019 AUTHORS\n<p>Permission is hereby granted, free of charge, to any person obtaining …\n"],["README","","README_md.html","","<p>Option combination generator\n<p>| AppVeyor | Jenkins | Github Actions | Codecov | Gem |\n| :------: | :-----: ...\n"]]}}